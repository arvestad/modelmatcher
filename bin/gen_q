#! /usr/bin/env python3
import argparse
import logging
import numpy as np
# The following matrices are copied from the seq-gen repository
#    https://github.com/rambaut/Seq-Gen/blob/master/source/aamodels.c

q_wag = np.array([0.610810, 0.569079, 0.821500, 1.141050, 1.011980, 1.756410, 1.572160, 0.354813, 0.219023, 0.443935, 1.005440, 0.989475, 0.233492, 1.594890, 3.733380, 2.349220, 0.125227, 0.268987, 2.221870, 
	0.711690, 0.165074, 0.585809, 3.360330, 0.488649, 0.650469, 2.362040, 0.206722, 0.551450, 5.925170, 0.758446, 0.116821, 0.753467, 1.357640, 0.613776, 1.294610, 0.423612, 0.280336, 
	6.013660, 0.296524, 1.716740, 1.056790, 1.253910, 4.378930, 0.615636, 0.147156, 3.334390, 0.224747, 0.110793, 0.217538, 4.394450, 2.257930, 0.078463, 1.208560, 0.221176, 
	0.033379, 0.691268, 6.833400, 0.961142, 1.032910, 0.043523, 0.093930, 0.533362, 0.116813, 0.052004, 0.472601, 1.192810, 0.417372, 0.146348, 0.363243, 0.169417, 
	0.109261, 0.023920, 0.341086, 0.275403, 0.189890, 0.428414, 0.083649, 0.437393, 0.441300, 0.122303, 1.560590, 0.570186, 0.795736, 0.604634, 1.114570, 
	6.048790, 0.366510, 4.749460, 0.131046, 0.964886, 4.308310, 1.705070, 0.110744, 1.036370, 1.141210, 0.954144, 0.243615, 0.252457, 0.333890, 
	0.630832, 0.635025, 0.141320, 0.172579, 2.867580, 0.353912, 0.092310, 0.755791, 0.782467, 0.914814, 0.172682, 0.217549, 0.655045, 
	0.276379, 0.034151, 0.068651, 0.415992, 0.194220, 0.055288, 0.273149, 1.486700, 0.251477, 0.374321, 0.114187, 0.209108, 
	0.152215, 0.555096, 0.992083, 0.450867, 0.756080, 0.771387, 0.822459, 0.525511, 0.289998, 4.290350, 0.131869, 
	3.517820, 0.360574, 4.714220, 1.177640, 0.111502, 0.353443, 1.615050, 0.234326, 0.468951, 8.659740, 
	0.287583, 5.375250, 2.348200, 0.462018, 0.382421, 0.364222, 0.740259, 0.443205, 1.997370, 
	1.032220, 0.098843, 0.619503, 1.073780, 1.537920, 0.152232, 0.147411, 0.342012, 
	1.320870, 0.194864, 0.556353, 1.681970, 0.570369, 0.473810, 2.282020, 
	0.179896, 0.606814, 0.191467, 1.699780, 7.154480, 0.725096, 
	1.786490, 0.885349, 0.156619, 0.239607, 0.351250, 
	4.847130, 0.578784, 0.872519, 0.258861, 
	0.126678, 0.325490, 1.547670, 
	2.763540, 0.409817, 
	0.347826
])

q_jtt = np.array([0.531678, 0.557967, 0.827445, 0.574478, 0.556725, 1.066681, 1.740159, 0.219970, 0.361684, 0.310007, 0.369437, 0.469395, 0.138293, 1.959599, 3.887095, 4.582565, 0.084329, 0.139492, 2.924161,
	0.451095, 0.154899, 1.019843, 3.021995, 0.318483, 1.359652, 3.210671, 0.239195, 0.372261, 6.529255, 0.431045, 0.065314, 0.710489, 1.001551, 0.650282, 1.257961, 0.235601, 0.171995,
	5.549530, 0.313311, 0.768834, 0.578115, 0.773313, 4.025778, 0.491003, 0.137289, 2.529517, 0.330720, 0.073481, 0.121804, 5.057964, 2.351311, 0.027700, 0.700693, 0.164525,
	0.105625, 0.521646, 7.766557, 1.272434, 1.032342, 0.115968, 0.061486, 0.282466, 0.190001, 0.032522, 0.127164, 0.589268, 0.425159, 0.057466, 0.453952, 0.315261,
	0.091304, 0.053907, 0.546389, 0.724998, 0.150559, 0.164593, 0.049009, 0.409202, 0.678335, 0.123653, 2.155331, 0.469823, 1.104181, 2.114852, 0.621323,
	3.417706, 0.231294, 5.684080, 0.078270, 0.709004, 2.966732, 0.456901, 0.045683, 1.608126, 0.548807, 0.523825, 0.172206, 0.254745, 0.179771,
	1.115632, 0.243768, 0.111773, 0.097485, 1.731684, 0.175084, 0.043829, 0.191994, 0.312449, 0.331584, 0.114381, 0.063452, 0.465271,
	0.201696, 0.053769, 0.069492, 0.269840, 0.130379, 0.050212, 0.208081, 1.874296, 0.316862, 0.544180, 0.052500, 0.470140,
	0.181788, 0.540571, 0.525096, 0.329660, 0.453428, 1.141961, 0.743458, 0.477355, 0.128193, 5.848400, 0.121827,
	2.335139, 0.202562, 4.831666, 0.777090, 0.098580, 0.405119, 2.553806, 0.134510, 0.303445, 9.533943,
	0.146481, 3.856906, 2.500294, 1.060504, 0.592511, 0.272514, 0.530324, 0.241094, 1.761439,
	0.624581, 0.024521, 0.216345, 0.474478, 0.965641, 0.089134, 0.087904, 0.124066,
	0.436181, 0.164215, 0.285564, 2.114728, 0.201334, 0.189870, 3.038533,
	0.148483, 0.943971, 0.138904, 0.537922, 5.484236, 0.593478,
	2.788406, 1.176961, 0.069965, 0.113850, 0.211561,
	4.777647, 0.310927, 0.628608, 0.408532,
	0.080556, 0.201094, 1.14398,
	0.747889, 0.239697,
	0.165473
    ])

q_mtrev = np.array([1.2199217606346e+01, 1.4182139942122e+01, 9.2985091873208e+00, 3.1542792981957e+01, 1.0025852846688e+00, 5.1418866803338e+00, 6.3531246495131e+01, 7.3137132861715e+00, 5.0782382656186e+01, 1.3399741808481e+01, 4.4021672780560e+00, 7.4673480520104e+01, 3.3513021631978e+00, 2.8582502221773e+01, 2.0413623195312e+02, 2.5301305153906e+02, 1.0000000000000e+00, 3.4084158197615e+00, 1.0266468401249e+02, 
	6.9661274444534e+00, 1.0000000000000e+00, 5.4384584796568e+01, 1.1631134513343e+02, 1.0000000000000e+00, 1.2122831341194e+01, 8.6961067087353e+01, 1.0000000000000e+00, 8.1976829394538e+00, 7.4423215395318e+01, 1.0000000000000e+00, 2.4659158338099e+00, 1.2439947713615e+01, 3.1791814866372e+00, 1.0935327216119e+00, 1.1550775790126e+01, 1.0000000000000e+00, 4.0211417480338e+00, 
	4.1809325468160e+02, 3.1020979842967e+01, 9.1349622725361e+01, 3.3185663516310e+01, 2.8052324651124e+01, 2.6112087577885e+02, 1.4261453863336e+01, 7.9775653461977e+00, 3.2036829276162e+02, 3.4424354918739e+01, 7.9996445145608e+00, 3.8586541461044e+01, 2.6020426225852e+02, 1.2550758780474e+02, 5.6207759736659e+00, 1.0071406219571e+02, 1.0000000000000e+00, 
	1.0000000000000e+00, 2.9097352675564e+01, 3.0713149855302e+02, 2.9877072751897e+01, 5.9995408885817e+01, 2.2827096245105e+00, 1.0000000000000e+00, 1.2183938185384e+00, 1.0000000000000e+00, 2.6221929413096e+00, 7.0708004204733e+00, 3.6327934317139e+01, 1.4743408713748e+01, 1.0453246057102e+01, 1.1165627147496e+01, 1.0000000000000e+00, 
	3.9599394038972e+01, 1.0000000000000e+00, 1.6163581056674e+01, 7.4467985406234e+01, 3.3018175376623e+01, 1.3500725995091e+01, 1.0000000000000e+00, 3.2504095376923e+00, 3.7264767083096e+01, 1.6454136037822e+01, 1.4581783243113e+02, 9.4720031458442e+01, 1.7684087896962e+01, 1.3409157685926e+02, 1.0000000000000e+00, 
	1.6503249008836e+02, 3.5530760735494e+00, 3.0652523140859e+02, 4.3905393139325e+00, 2.0895470525345e+01, 2.4504076430724e+02, 2.4931300477797e+01, 1.0059428264289e+01, 7.2256314165467e+01, 2.8480937892158e+01, 4.9962974409828e+01, 1.0000000000000e+00, 2.0430790980529e+01, 9.9986289000676e+00, 
	1.4884496769963e+01, 2.5853576435567e+01, 1.7418201388328e+00, 1.0000000000000e+00, 1.6519126809071e+02, 1.0000000000000e+00, 1.4067850525292e+00, 6.7547121641947e+00, 2.8794794140840e+01, 7.8001372062558e+00, 1.0000000000000e+00, 6.9067239183061e+00, 1.1127702362585e+01, 
	1.0000000000000e+00, 3.1466649021550e+00, 1.2699794194865e+00, 1.1962111069278e+01, 1.0000000000000e+00, 1.0000000000000e+00, 1.0000000000000e+00, 6.6277950574411e+01, 5.8800079133028e+00, 5.7494182626674e+00, 1.6887657206208e+00, 1.3320553471351e+00, 
	6.4536986087271e+00, 6.0472584534958e+00, 6.7197196398961e+01, 6.2977633277779e+00, 2.5347805183364e+01, 3.2089868698728e+01, 4.0766987134407e+01, 2.3570850628539e+01, 3.7286635325194e+00, 3.5270764890474e+02, 1.0000000000000e+00, 
	1.7320653206333e+02, 1.0298655619743e+01, 2.7262244199514e+02, 4.4561065036310e+01, 1.0856482766156e+01, 2.5107659603898e+01, 1.9391167162525e+02, 1.0000000000000e+00, 1.3161329199391e+01, 6.4365086389428e+02, 
	7.8314019154706e+00, 2.8290920517725e+02, 1.1371735519833e+02, 2.1105885757279e+01, 3.8741359395934e+01, 6.6524559321657e+01, 1.7071378554833e+01, 2.3234516108847e+01, 4.8247261078055e+01, 
	4.8092094826036e+01, 3.3887559483420e+00, 2.6368577564199e+01, 5.5679895711418e+01, 7.1750284708933e+01, 1.2631893872825e+01, 2.6932728996777e+01, 1.0000000000000e+00, 
	4.7798798034572e+01, 9.9165053447429e+00, 5.8505442466161e+01, 2.7798190504760e+02, 1.1427000119701e+01, 2.1029990530586e+01, 2.0397078683768e+02, 
	9.1089574817139e+00, 3.3835737720574e+01, 1.7815549567056e+01, 4.1272404968214e+00, 2.4504156395152e+02, 3.3435675442163e+00, 
	8.9421193040709e+01, 6.7485067008375e+01, 2.2161693733113e+00, 8.5338209390745e+00, 4.3342126659660e+00, 
	3.1432036618746e+02, 2.0305343047059e+01, 3.4167877957799e+01, 1.0000000000000e+00, 
	5.2559565123081e+00, 2.0382362288681e+01, 1.0765527137500e+02, 
	1.3814733274637e+01, 2.8259139240676e+00, 
	1.0000000000000e+00
    ])

def perturb(q, sd, min_element = 0.001):
    '''
    Perturb the Q matrix with a factor drawn from N(1,sd), but ensure it is positive.
    The third parameter defines the smallest value accepted in a Q matrix.
    Returns the new array (matrix)
    '''
    r = np.random.normal(size=len(q), loc=1.0, scale=sd)
    n_small_elements = sum(r < min_element)
    if n_small_elements > 0:
        logging.info(f'#small elements:\t{n_small_elements}')

    # Ensure that there are no small elements
    r[r < min_element] = min_element

    new_q =  np.multiply(q, r)
    deviation = sum(np.abs(new_q-q)) / len(q) 
    logging.info(f'Average absolute differences: \t{deviation}')
    return new_q

def print_q(q):
    '''
    Output the Q matrix in a seq-gen compatible format.
    '''
    print(' '.join(map(str,q)))

def main():
    ap = argparse.ArgumentParser()
    ap.add_argument('base_matrix', choices=['WAG', 'JTT', 'MTREV'],
                    help='Specifify which standard sequence model should be used.')
    ap.add_argument('sd', type=float, default=0.1,
                    help='Define the perturberation that should be used. Each entry in the base matrix will be multiplied with a factor taken from N(1, sd).')
    ap.add_argument('-l', '--log-file',
                    help='Give the name of a log file to use')

    args = ap.parse_args()

    if args.log_file:
        logging.basicConfig(filename=args.log_file, level=logging.INFO)
        
    model = args.base_matrix
    sd = args.sd
    if model == 'WAG':
        q = q_wag
    elif model == 'JTT':
        q = q_jtt
    elif model == 'MTREV':
        q = q_mtrev
    else:
        raise ValueError('bad input')

    q_new = perturb(q, sd)
    print_q(q_new)

if __name__ == '__main__':
    main()
